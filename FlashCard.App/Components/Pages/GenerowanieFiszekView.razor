@page "/generowanie-fiszek"
@using FlashCard.App.Models
@using FlashCard.App.Services
@using Microsoft.Extensions.Logging
@inject IGenerationService GenerationService
@inject ILogger<GenerowanieFiszekView> Logger
@inject NavigationManager NavigationManager

<PageTitle>Generowanie fiszek - FlashCard</PageTitle>

<div class="container mt-4">
    <h1>Generowanie fiszek</h1>
    
    <div class="card">
        <div class="card-body">
            <EditForm Model="@_request" OnValidSubmit="HandleValidSubmit">
                <DataAnnotationsValidator />
                <ValidationSummary />

                <div class="mb-3">
                    <label for="sourceText" class="form-label">Tekst źródłowy</label>
                    <InputTextArea id="sourceText" @bind-Value="_request.SourceText" class="form-control" rows="10" />
                    <ValidationMessage For="@(() => _request.SourceText)" />
                </div>

                <div class="mb-3">
                    <label for="model" class="form-label">Model</label>
                    <InputText id="model" @bind-Value="_request.Model" class="form-control" />
                    <ValidationMessage For="@(() => _request.Model)" />
                </div>

                <button type="submit" class="btn btn-primary" disabled="@_isGenerating">
                    @if (_isGenerating)
                    {
                        <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
                        <span>Generowanie...</span>
                    }
                    else
                    {
                        <span>Generuj fiszki</span>
                    }
                </button>
            </EditForm>
        </div>
    </div>

    @if (_response != null)
    {
        <div class="mt-4">
            <h2>Wygenerowane fiszki</h2>
            <div class="list-group">
                @foreach (var card in _response.Flashcards)
                {
                    <div class="list-group-item">
                        <h5 class="mb-1">@card.Front</h5>
                        <p class="mb-1">@card.Back</p>
                        <small class="text-muted">Źródło: @card.Source</small>
                    </div>
                }
            </div>
        </div>
    }
</div>

@code {
    private GenerationRequestDTO _request = new();
    private GenerationResponseDTO _response;
    private bool _isGenerating;

    private async Task HandleValidSubmit()
    {
        try
        {
            _isGenerating = true;
            _response = await GenerationService.GenerateFlashcardsAsync(_request);
        }
        catch (Exception ex)
        {
            Logger.LogError(ex, "Błąd podczas generowania fiszek");
            // Wyświetl komunikat o błędzie użytkownikowi
            await Task.CompletedTask;
        }
        finally
        {
            _isGenerating = false;
        }
    }
} 