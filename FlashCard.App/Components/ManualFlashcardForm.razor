@using FlashCard.App.Models
@using MudBlazor
@inject ISnackbar Snackbar

<MudPaper Class="pa-4">
    <MudText Typo="Typo.h5" Class="mb-4">Dodaj własną fiszkę</MudText>

    <MudForm @ref="form" @bind-IsValid="@isValid">
        <MudTextField @bind-Value="flashcard.Front"
                     Label="Pytanie"
                     Lines="3"
                     Required="true"
                     RequiredError="Pytanie jest wymagane"
                     Class="mb-4" />
        
        <MudTextField @bind-Value="flashcard.Back"
                     Label="Odpowiedź"
                     Lines="3"
                     Required="true"
                     RequiredError="Odpowiedź jest wymagana"
                     Class="mb-4" />

        <MudButton Variant="Variant.Filled"
                   Color="Color.Primary"
                   OnClick="Submit"
                   Disabled="@(!isValid)">
            Dodaj fiszkę
        </MudButton>
    </MudForm>
</MudPaper>

@code {
    private MudForm form = null!;
    private bool isValid;
    private GeneratedFlashcard flashcard = new();

    [Parameter]
    public EventCallback<GeneratedFlashcard> OnFlashcardAdded { get; set; }

    private IEnumerable<string> ValidateFront(string text)
    {
        if (string.IsNullOrWhiteSpace(text))
        {
            yield return "Przód fiszki jest wymagany";
        }
        else if (text.Length > 200)
        {
            yield return "Przód fiszki nie może przekraczać 200 znaków";
        }
    }

    private IEnumerable<string> ValidateBack(string text)
    {
        if (string.IsNullOrWhiteSpace(text))
        {
            yield return "Tył fiszki jest wymagany";
        }
        else if (text.Length > 500)
        {
            yield return "Tył fiszki nie może przekraczać 500 znaków";
        }
    }

    private async Task Submit()
    {
        await form.Validate();
        if (!form.IsValid) return;

        if (string.IsNullOrWhiteSpace(flashcard.Front) || string.IsNullOrWhiteSpace(flashcard.Back))
        {
            Snackbar.Add("Wszystkie pola są wymagane", Severity.Warning);
            return;
        }

        await OnFlashcardAdded.InvokeAsync(flashcard);
        flashcard = new GeneratedFlashcard();
        form.Reset();
    }
} 